name: Build, Push, and Deploy to EKS

on:
  push:
    branches:
      - main
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment: production

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug GitHub Context
      run: |
        echo "GITHUB_REF=${GITHUB_REF}"
        echo "GITHUB_REPOSITORY=${GITHUB_REPOSITORY}"
    
    - name: Inspect OIDC Token
      run: |
        echo "TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN" >> token.txt
        cat token.txt
    - name: Debug Environment
      run: printenv | grep ACTIONS
    - name: Fetch and Decode OIDC Token
      run: |
        curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" $ACTIONS_ID_TOKEN_REQUEST_URL >> oidc1.txt
        cat oidc1.txt
  
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
      with:
        role-to-assume: arn:aws:iam::225989347065:role/oidc_github_role
        role-session-name: samplerolesession
        aws-region: ap-southeast-2

    # Authenticate Docker to ECR
    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 225989347065.dkr.ecr.ap-southeast-2.amazonaws.com

    # Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t hello-world-image-app .

    # Tag the Docker image
    - name: Tag Docker image
      run: |
        docker tag hello-world-image-app:latest 225989347065.dkr.ecr.ap-southeast-2.amazonaws.com/hello-world:latest

    # Push the Docker image to ECR
    - name: Push Docker image to Amazon ECR
      run: |
        docker push 225989347065.dkr.ecr.ap-southeast-2.amazonaws.com/hello-world:latest

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3
    # Set up AWS CLI
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
      with:
        role-to-assume: arn:aws:iam::225989347065:role/oidc_github_role
        role-session-name: samplerolesession
        aws-region: ap-southeast-2

    # Set up kubectl
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    # Update kubeconfig
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ap-southeast-2 --name eks-testing

    # Deploy to EKS
    - name: Apply Kubernetes manifest
      run: |
        pwd
        ls
        kubectl apply -f deployment.yaml
        kubectl describe deployment my-app
        kubectl get services
        kubectl get pods -o wide
        kubectl get svc
        kubectl get deployments
        kubectl describe svc hello-world
